{"version":3,"sources":["components/Pagination.js","components/Home.js","components/Article.js","components/Author.js","App.js","serviceWorker.js","index.js"],"names":["Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","className","map","number","key","onClick","Home","useState","article","updateArticle","currentPage","setCurrentPage","useEffect","axios","get","then","response","console","log","data","entries","indexOfLastPost","indexOfFirstPost","currentPosts","slice","Helmet","class","style","backgroundColor","padding","_id","to","title","fontSize","float","published_on","source","body","substring","concat","author","authorName","display","length","pageNumber","Article","props","state","id","this","match","params","setState","catch","error","Component","Author","udpateAuthor","index","scope","src","avatar","path","alt","width","name","description","App","color","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.712556e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumbers = [];\r\n    for(let i=1; i<= Math.ceil(totalPosts / postsPerPage); i++){\r\n        pageNumbers.push(i);\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)} className=\"page-link\">{number}</a>\r\n\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Pagination from '../components/Pagination';\r\n\r\nconst API_URL_ARTICLE = \"https://mandatory-cms2-bdb280.devspace.host/api/collections/get/articles\";\r\n\r\nconst Home = () => {\r\n    const [article, updateArticle] = useState([]);\r\n    //Pagination\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(4);\r\n\r\n    //componentDidMount() without hook\r\n    useEffect(() => {\r\n        axios.get(API_URL_ARTICLE,\r\n            // {headers: { 'Cockpit-Token': '4286cd429116a7e0239f9fad00eaac' }}\r\n        )\r\n            .then(response => {\r\n                console.log(response.data.entries);\r\n                updateArticle(response.data.entries);\r\n            });\r\n    }, []);\r\n\r\n    //Pagination: Get current article (Reference: https://www.youtube.com/watch?v=IYCa1F-OWmk)\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = article.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    //Pagination: Change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\r\n\r\n    if (!article) {\r\n        return <p>Loading article...</p>;\r\n    }\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Home</title>\r\n            </Helmet>\r\n            <div class=\"row justify-content-center\">\r\n                {currentPosts.map((article) => (\r\n                    <div class=\"col-md-12 card mb-1\" style={{ backgroundColor: \"#f9fbfd\" }}>\r\n                        <div class=\"card-body\" style={{ padding: \"5px\" }}>\r\n                            <p key={article._id}>\r\n                                <h6><Link to={`/article/${article._id}`}>{article.title}</Link><div class=\" text-muted\" style={{ fontSize: \"12px\", float: \"right\" }}>{article.published_on}</div></h6>\r\n                                <p class=\"card-text\" style={{ fontSize: \"12px\" }}>\r\n                                    <div className=\"two\"><ReactMarkdown source={article.body.substring(0, 75).concat(' ', \". . . .\")} /><Link to={`/article/${article._id}`}> - Read more &rarr;</Link></div>\r\n                                    <div class=\" text-muted\" style={{ fontSize: \"12px\", float: \"right\" }}>\r\n                                        Published by: {(article.author || []).map(authorName => <Link to={\"/author/\" + article._id}> {authorName.display}</Link>)}</div></p>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={article.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Home;","import React, { Component } from 'react'\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios'\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nexport default class Article extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { article: null };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n\r\n        //const cockpitToken = '4286cd429116a7e0239f9fad00eaac';\r\n        //axios.get(`http://192.168.99.102:8080/api/collections/get/articles/Case?token=${cockpitToken}&filter[_id]=${id}`)\r\n\r\n        axios.get(`https://mandatory-cms2-bdb280.devspace.host/api/collections/get/articles/Case?&filter[_id]=${id}`)\r\n            .then((response) => {\r\n                console.log(response.data.entries[0])\r\n                this.setState({ article: response.data.entries[0] });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { article } = this.state;\r\n\r\n        if (article === null) {\r\n            return <p>Fetching article...</p>;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Article {article.title}</title>\r\n                </Helmet>\r\n                {/* <nav aria-label=\"breadcrumb\">\r\n                    <ol class=\"breadcrumb\">\r\n                        <li class=\"breadcrumb-item\"><Link to=\"/\">Home </Link></li>\r\n                        <li class=\"breadcrumb-item active\">{article.title}</li>\r\n                    </ol>\r\n                </nav> */}\r\n                <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-12 card mb-4  mt-3 left  top\" style={{backgroundColor:\"#f9fbfd\"}}>\r\n                        <div class=\"card-body\" style={{ padding: \"25px\" }}>\r\n                            <h3>{article.title}</h3>\r\n                            <p class=\" text-muted\" style={{ fontSize: \"12px\" }}>Published by: <b>{article.author[0].display}</b> on\r\n                                <b> {article.published_on}</b></p>\r\n                                <ReactMarkdown source={article.body} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst API_URL_AUTHOR = \"https://mandatory-cms2-bdb280.devspace.host/api/collections/get/authors\"\r\n\r\nconst Author = () => {\r\n    const [author, udpateAuthor] = useState([]);\r\n\r\n    //  componentDidMount() without hook\r\n    useEffect(() => {\r\n        axios.get(API_URL_AUTHOR,\r\n            // {headers: { 'Cockpit-Token': '4286cd429116a7e0239f9fad00eaac' }}\r\n        )\r\n            .then(response => {\r\n                console.log(response.data.entries);\r\n                udpateAuthor(response.data.entries);\r\n            });\r\n    }, []);\r\n\r\n    if (!author) {\r\n        return <p>Loading author...</p>;\r\n    }\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Author</title>\r\n            </Helmet>\r\n            {/* <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><Link to=\"/\">Home </Link></li>\r\n                    <li class=\"breadcrumb-item active\">All Authors</li>\r\n                </ol>\r\n            </nav> */}\r\n            <table class=\"table table-hover\">\r\n                <caption>List of Authors</caption>\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Image</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {author.map((author, index) => (\r\n                        <tr key={author._id}>\r\n                            <td scope=\"row\">{index + 1}</td>\r\n                            <td>{<img src={\"https://mandatory-cms2-bdb280.devspace.host/\" + author.avatar.path} alt=\"image\" width=\"40px\" />}</td>\r\n                            <td>{author.name}</td>\r\n                            <td>{author.description}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Author;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Article from './components/Article';\nimport Author from './components/Author'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <header class=\"masthead\">\n          <nav class=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"mainNav\">\n            <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n              <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\">\n                  <Link to=\"/\"><a className=\"nav-link\"><b>Home</b></a></Link>\n                </li>\n                <li class=\"nav-item\">\n                  <Link to=\"/Author\"><a className=\"nav-link\"><b>Authors</b></a></Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <div className=\"site-heading\" style={{color:'#FF0000'}}>\n          <h2>Welcome to my blog</h2>\n            \n</div>\n        </header><br />\n        <div className=\"container\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/article/:id\" component={Article} />\n          <Route path=\"/Author\" component={Author} />\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}